// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SistemaWebPedidos.Infrastructure.Persistence;

#nullable disable

namespace SistemaWebPedidos.Infrastructure.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20220416035644_produtosimagens")]
    partial class produtosimagens
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SistemaWebPedidos.Core.Entities.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("CATEGORIAS", (string)null);
                });

            modelBuilder.Entity("SistemaWebPedidos.Core.Entities.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Numero")
                        .HasColumnType("text");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("ENDERECOS", (string)null);
                });

            modelBuilder.Entity("SistemaWebPedidos.Core.Entities.Fornecedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("TipoFornecedor")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("FORNECEDORES", (string)null);
                });

            modelBuilder.Entity("SistemaWebPedidos.Core.Entities.ItemPedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PedidoId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ProdutoId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorSemDesconto")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ItensPedidos");
                });

            modelBuilder.Entity("SistemaWebPedidos.Core.Entities.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("EnderecoEntregaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoEntregaId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("SistemaWebPedidos.Core.Entities.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(2000)");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uuid");

                    b.Property<List<string>>("Imagens")
                        .HasColumnType("text[]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("PrecoCusto")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PrecoPromocional")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PrecoVenda")
                        .HasColumnType("numeric");

                    b.Property<string>("Sku")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("FornecedorId");

                    b.ToTable("PRODUTOS", (string)null);
                });

            modelBuilder.Entity("SistemaWebPedidos.Core.Entities.Sobre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Cnpj")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("ContatoPrincipal")
                        .HasColumnType("text");

                    b.Property<string>("ContatoSecundario")
                        .HasColumnType("text");

                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<Guid?>("EnderecoId")
                        .HasColumnType("uuid");

                    b.Property<TimeOnly>("HorarioAbertura")
                        .HasColumnType("time without time zone");

                    b.Property<TimeOnly>("HorarioFechamento")
                        .HasColumnType("time without time zone");

                    b.Property<string>("NomeEstabelecimento")
                        .HasColumnType("text");

                    b.Property<bool>("PessoaFisica")
                        .HasColumnType("boolean");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("SOBRE", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("971c4dcc-33f8-4a51-9b70-f34ee4c60282"),
                            Descricao = "Escreve aqui a Descrição",
                            HorarioAbertura = new TimeOnly(0, 0, 0),
                            HorarioFechamento = new TimeOnly(0, 0, 0),
                            NomeEstabelecimento = "Nome do Estabelecimento",
                            PessoaFisica = false
                        });
                });

            modelBuilder.Entity("SistemaWebPedidos.Core.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EnderecoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdEntity")
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("text");

                    b.Property<int>("Telefone")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.ToTable("USUARIOS", (string)null);
                });

            modelBuilder.Entity("SistemaWebPedidos.Core.Entities.ItemPedido", b =>
                {
                    b.HasOne("SistemaWebPedidos.Core.Entities.Pedido", null)
                        .WithMany("ItensPedido")
                        .HasForeignKey("PedidoId");

                    b.HasOne("SistemaWebPedidos.Core.Entities.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("SistemaWebPedidos.Core.Entities.Pedido", b =>
                {
                    b.HasOne("SistemaWebPedidos.Core.Entities.Endereco", "EnderecoEntrega")
                        .WithMany()
                        .HasForeignKey("EnderecoEntregaId")
                        .IsRequired();

                    b.Navigation("EnderecoEntrega");
                });

            modelBuilder.Entity("SistemaWebPedidos.Core.Entities.Produto", b =>
                {
                    b.HasOne("SistemaWebPedidos.Core.Entities.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .IsRequired();

                    b.HasOne("SistemaWebPedidos.Core.Entities.Fornecedor", "Fornecedor")
                        .WithMany("Produtos")
                        .HasForeignKey("FornecedorId")
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("SistemaWebPedidos.Core.Entities.Sobre", b =>
                {
                    b.HasOne("SistemaWebPedidos.Core.Entities.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("SistemaWebPedidos.Core.Entities.Usuario", b =>
                {
                    b.HasOne("SistemaWebPedidos.Core.Entities.Endereco", "Endereco")
                        .WithOne("Usuario")
                        .HasForeignKey("SistemaWebPedidos.Core.Entities.Usuario", "EnderecoId")
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("SistemaWebPedidos.Core.Entities.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("SistemaWebPedidos.Core.Entities.Endereco", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaWebPedidos.Core.Entities.Fornecedor", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("SistemaWebPedidos.Core.Entities.Pedido", b =>
                {
                    b.Navigation("ItensPedido");
                });
#pragma warning restore 612, 618
        }
    }
}
